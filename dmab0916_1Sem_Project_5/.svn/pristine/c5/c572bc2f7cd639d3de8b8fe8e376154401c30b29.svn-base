package controller;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Formatter;
import model.OrderContainer;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonIOException;
import com.google.gson.JsonSerializer;
import com.google.gson.JsonSyntaxException;


public class SaveAndLoadFromFile {
	private final String orderPath="orders.txt";
	private Gson gson;
	private String json;

	public void saveAll() {
		saveOrders();
	}

	public void loadAll() {
		loadOrders();
	}

	private void saveOrders() {
		gson = new Gson();
		String jsonString = gson.toJson(OrderContainer.getInstance());
		try {
			FileWriter fw = new FileWriter(new File(orderPath), false);
			BufferedWriter bw = new BufferedWriter(fw);
			bw.write(jsonString);
			bw.close();
			System.out.println("Done writing to " + orderPath); //For testing 
		} catch (IOException e) {
			// TODO Auto-generated catch block
			System.out.println("Save-error");
			e.printStackTrace();
		}
	}

	public void loadOrders(){
		gson = new Gson();
		String res;
		try{
			BufferedReader reader = new BufferedReader(new FileReader(orderPath));
			String input = null;
			StringBuilder stringBuilder = new StringBuilder();
			String ls = System.getProperty("line.separator"); 
			while((input = reader.readLine()) != null){
				stringBuilder.append(input);
				stringBuilder.append(ls);
			}
			res = stringBuilder.toString();
			reader.close();
			
			OrderContainer orderContainer = gson.fromJson(res, OrderContainer.class);
			orderContainer.restoreFromFile(orderContainer);
		} catch (Exception e) {
			System.out.println("Load-fejl");
		}
	}
}

