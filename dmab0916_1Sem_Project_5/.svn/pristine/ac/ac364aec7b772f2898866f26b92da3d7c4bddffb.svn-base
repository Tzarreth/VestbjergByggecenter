package GUI;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Image;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.border.EmptyBorder;
import model.*;


import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.UIManager;
import java.awt.SystemColor;

public class MainGUI extends JFrame {

	private JPanel contentPane;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		setup();
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					MainGUI frame = new MainGUI();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public MainGUI() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 656, 384);
		contentPane = new JPanel();
		contentPane.setBackground(SystemColor.menu);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		createBtnOrder();
		createBtnSupplier();
		
	}



	private void createBtnOrder() {
		ImageIcon iconOrder = new ImageIcon(getClass().getClassLoader().getResource("images/cart.png"));
		JButton btnOrder = new JButton(iconOrder);
		btnOrder.setFocusPainted(false);
		btnOrder.setText("Ordrer");
		btnOrder.setMnemonic(KeyEvent.VK_O);
		btnOrder.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println("Order clicked");
			}
		});
		
		btnOrder.setBackground(SystemColor.menu);
		btnOrder.setBorder(null);
		btnOrder.setBounds(67, 74, 172, 172);
		contentPane.add(btnOrder);
		
		
	}
	
	private void createBtnSupplier() {
		ImageIcon iconSupplier = new ImageIcon(getClass().getClassLoader().getResource("images/dolly.png"));
		JButton btnLager = new JButton(iconSupplier);
		btnLager.setFocusPainted(false);
		btnLager.setText("Lager");
		btnLager.setMnemonic(KeyEvent.VK_L);
		btnLager.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				System.out.println("Supplier clicked");
				btnLagerClicked();
				
			}
		});
		
		btnLager.setBackground(new Color(240, 240, 240));
		btnLager.setBorder(null);
		btnLager.setBounds(357, 74, 172, 172);
		contentPane.add(btnLager);
		
	}

	protected void btnLagerClicked() {
		LagerGUI lagerGUI = new LagerGUI();
		lagerGUI.setVisible(true);
		
	}
	
	public static void setup(){
		Supplier s1, s2, s3;
		Product p1, p2, p3, p4, p5, p6, p7, p8, p9;
		StockProduct sp1, sp2, sp3, sp4, sp5, sp6, sp7, sp8, sp9;
		ProductContainer pCon;
		Stock stock;
		Customer c1, c2, c3;
		CustomerContainer cCon;

		s1 = new Supplier("Bauhaus");
		s2 = new Supplier("Silvan");
		s3 = new Supplier("Jem og Fix");
		p1 = new Product(1500, 2000, "1", "snescooter", "vinter", "Hylde 1", 10, 4, 15, s3);
		p2 = new Product(800, 1000, "2", "kælk", "vinter", "hylde4", 5, 20, 30, s3);
		p3 = new Product(1000, 1200, "3", "hurtig kælk", "vinter", "hylde 5", 3, 4, 25, s1);
		p4 = new Product(100, 300, "4", "kaffemaskine", "hvidevarer", "hylde 17", 5, 6, 10, s2);
		p5 = new Product(1300, 1500, "5", "vaskemaskine", "hårdeHvidevarer", "hylde 19", 4, 4, 5, s1);
		p6 = new Product(3000, 3200, "6", "den slår hårdt", "værktøj", "Hylde 52", 10, 2, 15, s3);
		p7 = new Product(20, 30, "102", "Spær - 4Meter", "ByggeMaterialer", "række 16", 16, 40, 100, s1);
		p8 = new Product(450, 899, "140", "Håndvask, hvid, 40cm", "Køkken", "Hylde 74", 4, 10, 15, s2);
		p9 = new Product(120, 250, "13", "Sneskovl - 35cm", "vinter", "Hylde 6", 29, 40, 65, s3);

		pCon = ProductContainer.getInstance();
		pCon.addProduct(p1);
		pCon.addProduct(p2);
		pCon.addProduct(p3);
		pCon.addProduct(p4);
		pCon.addProduct(p5);
		pCon.addProduct(p6);
		pCon.addProduct(p7);
		pCon.addProduct(p8);
		pCon.addProduct(p9);
		
		sp1 = new StockProduct(p1, "Reol A : Hylde 1", "Afd: 1");
		sp2 = new StockProduct(p2, "Reol B : Hylde 2", "Afd: 1");
		sp3 = new StockProduct(p3, "Reol B : Hylde 3", "Afd: 1");
		sp4 = new StockProduct(p4, "Reol F : Hylde 6", "Afd: 2");
		sp5 = new StockProduct(p5, "Reol D : Hylde 5", "Afd: 1");
		sp6 = new StockProduct(p6, "Reol C : Hylde 4", "Afd: 1");
		sp7 = new StockProduct(p7, "Reol E : Hylde 2", "Afd: 2");
		sp8 = new StockProduct(p8, "Reol D : Hylde 4", "Afd: 1");
		sp9 = new StockProduct(p9, "Reol E : Hylde 6", "Afd: 2");
		
		stock = Stock.getInstance();
		stock.addStockProduct(sp1);
		stock.addStockProduct(sp2);
		stock.addStockProduct(sp3);
		stock.addStockProduct(sp4);
		stock.addStockProduct(sp5);
		stock.addStockProduct(sp6);
		stock.addStockProduct(sp7);
		stock.addStockProduct(sp8);
		stock.addStockProduct(sp9);

		c1 = new Customer("Jakob Jakobsen", "Sofiendalsvej 60", "jakob@jakobsen.com", "12345678", "privat");
		c2 = new Customer("Tømrermester", "Lægtevej 4", "hej@tømreren.dk", "12121212", "erhverv");
		c3 = new Customer("Hans Hansen", "Birkevej 10", "hans@gmail.com", "77778888", "privat");

		cCon = CustomerContainer.getInstance();
		cCon.addCustomer(c1);
		cCon.addCustomer(c2);
		cCon.addCustomer(c3);
	}
}
